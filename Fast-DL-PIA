#!/bin/bash
#
#World Wide Servers by ip
#wget -q  https://www.privateinternetaccess.com/pages/network/ -O - | grep -E -o '>[^.]+\.privateinternetaccess\.com<' | tr -d '[<>]' | while read host ;do host $host ;done | awk '{print $NF}' | sort -u | xargs sudo netselect -v -s 20
#
# Some Test File Locations
# http://support.smartdnsproxy.com/customer/portal/articles/1907772-vpn-server-locations-addresses
#
# U.S Servers by ip
#wget -q  https://www.privateinternetaccess.com/pages/network/ -O - | grep -E -o '>[^.]+\.privateinternetaccess\.com<' | tr -d '[<>]' | grep us- | while read host ;do host $host ;done | awk '{print $NF}' | sort -u | xargs sudo netselect -v -s 20

tput sgr0
# Dependencies "Netselect"
if command -v netselect >/dev/null 2>&1 ; then
    printf "%b\n"

else
clear
cat <<"EOF"

Netselect is required but not found. You can download it from

http://ftp.us.debian.org/debian/pool/main/n/netselect/
http://ftp.us.debian.org/debian/pool/main/n/netselect/netselect_0.3.ds1-28+b1_i386.deb		i386
http://ftp.us.debian.org/debian/pool/main/n/netselect/netselect_0.3.ds1-28+b1_arm64.deb		ARM64
http://ftp.us.debian.org/debian/pool/main/n/netselect/netselect_0.3.ds1-28+b1_armhf.deb		ARMHF
http://ftp.us.debian.org/debian/pool/main/n/netselect/netselect_0.3.ds1-28+b1_amd64.deb		AMD64

install with sudo dpkg -i netselect_0.3.ds1-28+b1_*.deb

Your Architecture (i386, x86_64, etc.) Is
EOF
dpkg --print-architecture
    exit
fi

function main-selection {
printf "%b\n"
tput cup 15 0
tput ed
	cat <<"EOF"

Select Option

1. Check For PIA's Fastest Server
2. Speed Test Your Current Connection Speed
3. Exit / Quit

EOF

tput cup 22 0
tput ed
read -n 1 option

case "$option" in
    1) 
        menu
        ;;
    2)
		speedtest
		;;
    3)
		tput cup 22 0
		tput ed
		exit
		;;
    *)
        tput cup 12 0
		tput ed
        main-selection
        ;;
esac

}


pia() {
tput cup 15 0
tput ed
printf "%b\n" " "
printf "%b" "Checking For PIA's Fastest Server...Please Wait." "\n\n"
if [ "${selection}" -eq 0 ]; then
tput setaf 3
printf "%b" "Checking All Servers Takes More Time....Be Patient" "\n"
server=$(wget -q  https://www.privateinternetaccess.com/pages/network/ -O - | grep -E -o '>[^.]+\.privateinternetaccess\.com<' | tr -d '[<>]')
serverCount=$(printf "%b\n" "${server}" | wc -l)
countries=$(printf "%b\n" "${server}" | cut -c 1-2 | uniq | wc -l)
tput setaf 2
printf "%b\n" "Checking "${serverCount}" Locations From "${countries}" Countries"
tput sgr0
else
server=$(wget -q  https://www.privateinternetaccess.com/pages/network/ -O - | grep -E -o '>[^.]+\.privateinternetaccess\.com<' | tr -d '[<>]' | grep "${LOCATION}")
serverCount=$(printf "%b\n" "${server}" | wc -l)
printf "%b\n" "Checking "${serverCount}" Locations in Selected Country"
fi
#
# Sudo Check -----------------------------------------------------
sudo -nv 2> /dev/null
if [ "${?}" -ne 0 ] ; then
    printf "%b" "Netselect Requires Root Access To Run" "\n\n"
fi
#-----------------------------------------------------------------
#
printf "%b\n" "${server}"
printf "%b\n" "${server}" | xargs sudo netselect -s 1 > file1
tput cup 15 0
tput ed
printf "%b" "Fastest Hostname" "\n\n"
tput setaf 1
cat file1 | awk '{print $2}'
fhostname=$(cat file1 | awk '{print $2}')
printf "%b\n"
cat file1 | awk '{printf $2}' | xargs host > file2
IPs=$(cat file2 | awk '{print $4}')
cAddresses=$(wc -l file2 | awk '{print $1}')
printf "%b" "${fhostname}";tput setaf 3;printf "%b" " Has "${cAddresses}" Servers For That Hostname" "\n\n"
tput sgr0
printf "%b" "Checking For The Fastest IP Address To "${fhostname}" " "\n"
printf "%b\n" "${IPs}" 
tput setaf 2
FinalIP=$(cat file2 | awk '{print $4}' | xargs sudo netselect -s 1 | awk '{print $2}')
#printf "%b" "${FinalIP}" " "
tput setaf 3
resptime=$(ping -c 10 "${FinalIP}" | tail -1| awk -F '/' '{print $5 "ms"}')
tput cup 22 0
tput ed
printf "%b\n"
printf "%b\n" "${FinalIP}" "Has an Avg Response Time Of "${resptime}""
printf "%b\n\n"
tput sgr0
#rm file1 file2


}

banner() {
	tput setaf 2
cat <<"EOF"
  ____           _                   _                                    
 |  _ \   _ __  (_) __   __   __ _  | |_    ___                           
 | |_) | | '__| | | \ \ / /  / _` | | __|  / _ \                          
 |  __/  | |    | |  \ V /  | (_| | | |_  |  __/                          
 |_|_    |_|    |_|   \_/    \__,_|  \__|  \___|   _                      
 |_ _|  _ __   | |_    ___   _ __   _ __     ___  | |_                    
  | |  | '_ \  | __|  / _ \ | '__| | '_ \   / _ \ | __|                   
  | |  | | | | | |_  |  __/ | |    | | | | |  __/ | |_                    
 |___| |_| |_|  \__|  \___| |_|    |_| |_|  \___|  \__|                   
    / \      ___    ___    ___   ___   ___        ___    ___    _ __ ___  
   / _ \    / __|  / __|  / _ \ / __| / __|      / __|  / _ \  | '_ ` _ \ 
  / ___ \  | (__  | (__  |  __/ \__ \ \__ \  _  | (__  | (_) | | | | | | |
 /_/   \_\  \___|  \___|  \___| |___/ |___/ (_)  \___|  \___/  |_| |_| |_|
                                                                          
EOF
tput sgr0
printf "%b\n"

}
menu() {
tput cup 22 0
tput ed
printf "%b\n" "Checking For VPN Connection"
ValuePIA=$(curl -m 10 -s https://www.privateinternetaccess.com/pages/whats-my-ip/ | grep -c "You are protected")

if (( "${ValuePIA}" > 0 ))
then
tput cup 15 0
tput ed
tput setaf 3
   printf "%b" "You are currently connected to PIA's VPN service.
More realistic results can be achived if you are not connected
to PIA for the \"Fastest Server Check\""
tput sgr0

else
tput cup 15 0
tput ed
fi

printf "%b\n"
cat <<"EOF"

Select Country

0. ALL SERVERS PIA OFFERS
1. USA
2. UK
3. Canada
4. Australia
5. New Zealand
6. Germany
7. Hong Kong
8. Japan
9. Israel

EOF

read -n 1 selection
case "${selection}" in

	0)
	LOCATION=""
	;;
	1)
	LOCATION="us-";;
	2)
	LOCATION="uk-";;
	3)
	LOCATION="ca-";;
	4)
	LOCATION="au-";;
	5)
	LOCATION="nz.";;
	6)
	LOCATION="de-";;
	7)
	LOCATION="hk.";;
	8)
	LOCATION="japan.";;
	9)
	LOCATION="israel";;
	*)
	clear
	banner
	menu
	tput cup 14 0
	tput ed
	;;
	esac
	pia
}

function speedtest {
# Dependencies "wget"
if command -v curl >/dev/null 2>&1 ; then
tput cup 15 0
tput ed
    printf "%b\n"

else
ScriptLoc=$(readlink -f "$0")
tput cup 15 0
tput ed
tput setaf 1
printf "%b\n" "curl is required for Speed Testing but not found"
printf "%b\n"
tput sgr0
printf "%b\n" "Would you like to try to install it now?"
printf "%b\n"

read -r -n 1 -p "[y/N] " response
case "$response" in
    [yY]) 
        sudo apt install curl
        exec "$ScriptLoc"
		;;
    *)
        
		exec "$ScriptLoc"
        ;;
esac

fi

if command -v bc >/dev/null 2>&1 ; then
tput cup 15 0
tput ed
    printf "%b\n"

else
ScriptLoc=$(readlink -f "$0")
tput cup 15 0
tput ed
tput setaf 1
printf "%b\n" "bc is required for Speed Testing but not found"
printf "%b\n"
tput sgr0
printf "%b\n" "Would you like to try to install it now?"
printf "%b\n"

read -r -n 1 -p "[y/N] " response
case "$response" in
    [yY]) 
        sudo apt install bc
        exec "$ScriptLoc"
		;;
    *)
        
		exec "$ScriptLoc"
        ;;
esac

fi


cat <<"EOF"

Select Download Size

1. 10  MB
2. 20  MB
3. 50  MB
4. 100 MB
5. 200 MB
6. 500 MB

EOF

	read -n 1 size
case "${size}" in
	1)
	FileSize="10"
	;;
	2)
	FileSize="20"
	;;
	3)
	FileSize="50"
	;;
	4)
	FileSize="100"
	;;
	5)
	FileSize="200"
	;;
	6)
	FileSize="500"
	;;
	*)
	speedtest;;
	esac
tput cup 26 0
tput ed
printf "%b" "Download "${FileSize}"MB File From?" "\n"

	cat <<"EOF"

1. USA
2. UK
3. Germany
4. Netherlands
5. Canada
6. Hong Kong
7. Italy
8. Japan
9. Australia
EOF
printf "%b\n\n"

	read -n 1 location
	case "${location}" in
	1)
	URL="http://mirror.sfo12.us.leaseweb.net/speedtest/1000mb.bin"
	LOC="USA"
	;;
	2)	
	URL="http://ipv4.download.thinkbroadband.com/512MB.zip"
	LOC="United Kingdom"
	;;
	3)	
	URL="https://speed.hetzner.de/1GB.bin"
	LOC="Germany"
	;;
	4)	
	URL="https://iperf.worldstream.nl/1000mb.bin"
	LOC="Netherlands"
	;;
	5)	
	URL="http://ca-mr2-smart.serverlocation.co:82/1Gio.dat"
	LOC="Canada"
	;;
	6)	
	URL="http://hk.serverlocation.co:82/1Gio.dat"
	LOC="Hong Kong"
	;;
	7)	
	URL="http://it-ml-smart.serverlocation.co:82/1Gio.dat"
	LOC="Italy"
	;;
	8)	
	URL="http://jp-tk-smart.serverlocation.co:82/1Gio.dat"
	LOC="Japan"
	;;
	9)	
	URL="http://au-sy.serverlocation.co:82/1Gio.dat"
	LOC="Australia"
	;;
	*)
	speedtest
	;;
	esac
tput cup 38 0
tput ed	
printf "%s\n" "Downloading "${FileSize}"MB's From ${LOC} "
tput cup 41 0
tput ed	
printf "%b\n" $(dirname "${URL}")
tput setaf 3
dlspeed=$(printf "%b" "scale=2; " && curl --progress-bar --connect-timeout 10 -o /dev/null -r 0-"${FileSize}"000000 "${URL}" -w "%{speed_download}"  | sed "s/\,/\./g" && echo "/1048576");
tput setaf 5
printf "%b\n" "$dlspeed" | bc -q | sed "s/$/ MB\/sec/;s/^/\tDownload Speed\: /";
tput sgr0
printf "%b\n"

	read -n 1 -p " Press Any Key To Continue " continue
	case "${continue}" in
    *) 
     exec $(readlink -f "$0")
     #exec "$ScriptLoc"
     ;;
     esac
}

clear
banner
if ping -q -c 1 -W 1 google.com >/dev/null; then
  main-selection
else
	printf "%b\n"
  printf "%b" "Network appears to be down. Unable to reach google.com for network connectivity test" "\n\n"
fi

